-- CREATE TABLE IF NOT EXISTS "Teams" (
--     id SERIAL PRIMARY KEY,
--     name VARCHAR(255) NOT NULL,
--     photo_url VARCHAR(255),
--     anthem_url VARCHAR(255),
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS "Players" (
--     id SERIAL PRIMARY KEY,
--     jersey_number INTEGER,
--     first_name VARCHAR(255) NOT NULL,
--     last_name VARCHAR(255) NOT NULL,
--     team_id INTEGER,
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     FOREIGN KEY (team_id) REFERENCES "Teams"(id) ON DELETE SET NULL ON UPDATE CASCADE
-- );

-- CREATE TABLE IF NOT EXISTS "Tournaments" (
--     id SERIAL PRIMARY KEY,
--     name VARCHAR(255) NOT NULL,
--     description TEXT,
--     location VARCHAR(255),
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS "TournamentTypes" (
--     id SERIAL PRIMARY KEY,
--     name VARCHAR(255) NOT NULL,
--     description TEXT,
--     has_group_stage BOOLEAN NOT NULL DEFAULT FALSE,
--     group_stage_size INTEGER,
--     has_knockout_stage BOOLEAN NOT NULL DEFAULT FALSE,
--     knockout_depth INTEGER,
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS "MatchStatuses" (
--     id SERIAL PRIMARY KEY,
--     name VARCHAR(255) UNIQUE NOT NULL,
--     description TEXT,
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS "MatchTypes" (
--     id SERIAL PRIMARY KEY,
--     name VARCHAR(255) NOT NULL,
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS "Matches" (
--     id SERIAL PRIMARY KEY,
--     tournament_id INTEGER,
--     status_id INTEGER NOT NULL,
--     type_id INTEGER NOT NULL,
--     team_a INTEGER NOT NULL,
--     team_b INTEGER NOT NULL,
--     schedule_at TIMESTAMP WITH TIME ZONE,
--     duration_seconds INTEGER,
--     score_a INTEGER,
--     score_b INTEGER,
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     FOREIGN KEY (tournament_id) REFERENCES "Tournaments"(id) ON DELETE SET NULL ON UPDATE CASCADE,
--     FOREIGN KEY (status_id) REFERENCES "MatchStatuses"(id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     FOREIGN KEY (type_id) REFERENCES "MatchTypes"(id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     FOREIGN KEY (team_a) REFERENCES "Teams"(id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     FOREIGN KEY (team_b) REFERENCES "Teams"(id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     CHECK (team_a <> team_b), -- Verhindert, dass ein Team gegen sich selbst spielt
--     CHECK (score_a >= 0),      -- Stellt sicher, dass die Punktzahl nicht negativ ist
--     CHECK (score_b >= 0)       -- Stellt sicher, dass die Punktzahl nicht negativ ist
-- );

-- CREATE TABLE IF NOT EXISTS "EventTypes" (
--     id SERIAL PRIMARY KEY,
--     name VARCHAR(255) NOT NULL,
--     description TEXT,
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS "MatchEvents" (
--     id SERIAL PRIMARY KEY,
--     match_id INTEGER NOT NULL,
--     event_type_id INTEGER NOT NULL,
--     "timestamp" TIMESTAMP WITH TIME ZONE NOT NULL,
--     in_game_timestamp INTEGER,
--     team_id INTEGER,
--     player_id INTEGER,
--     points INTEGER,
--     "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL,
--     FOREIGN KEY (match_id) REFERENCES "Matches"(id) ON DELETE CASCADE ON UPDATE CASCADE,
--     FOREIGN KEY (event_type_id) REFERENCES "EventTypes"(id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     FOREIGN KEY (team_id) REFERENCES "Teams"(id) ON DELETE SET NULL ON UPDATE CASCADE,
--     FOREIGN KEY (player_id) REFERENCES "Players"(id) ON DELETE SET NULL ON UPDATE CASCADE
-- );

-- CREATE TABLE IF NOT EXISTS tournament_teams (
--   tournament_id INTEGER,
--   team_id INTEGER,
--   PRIMARY KEY (tournament_id, team_id),
--   FOREIGN KEY (tournament_id) REFERENCES "Tournaments"(id) ON DELETE CASCADE ON UPDATE CASCADE,
--   FOREIGN KEY (team_id) REFERENCES "Teams"(id) ON DELETE CASCADE ON UPDATE CASCADE
-- );